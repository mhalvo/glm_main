# daily affect
emaaff <- c(661:670,679:680)
# momentary impulsivity
emaimp <- c(765:782, 788:791)
dmis <- as.tibble(select(dalluw,
PID, t1dem, t1imp,t1alc, emaalc, emaaff, emaimp,
-CHECK4))
print(dmis, n=90)
##################################
# Aggregate data to person level #
##################################
dmisp <- dmis[duplicated(dmis$PID)==F,]
####################
# Describe UW data #
####################
# age
dmisp$age <- 117 - dmisp$DOB.year
describe(dmisp$age)
# gender
sum(dmisp$gender.female)/157
# race
sum(dmisp$race.white)/157
sum(dmisp$race.hispanic)/157
sum(dmisp$race.eastasian)/157
sum(dmisp$race.southeastasian)/157
sum(dmisp$race.pacificislander)/157
sum(dmisp$race.southasian)/157
sum(dmisp$race.amerindian)/157
sum(dmisp$race.africanamer)/157
sum(dmisp$race.african)/157
sum(dmisp$race.middleeastern)/157
sum(dmisp$race.mixed)/157
sum(dmisp$race.other)/157
sum(dmisp$race.noresponse)/157
pre <- c("UPPS1", "UPPS6", "UPPS11", "UPPS16", "UPPS21","UPPS28",
"UPPS33","UPPS38", "UPPS43", "UPPS48", "UPPS55")
nurg <- c("UPPS2", "UPPS7", "UPPS12", "UPPS17", "UPPS22","UPPS29",
"UPPS34","UPPS39", "UPPS44", "UPPS50", "UPPS53","UPPS58")
ss <- c("UPPS3", "UPPS8", "UPPS13", "UPPS18", "UPPS23","UPPS26",
"UPPS31","UPPS36", "UPPS41", "UPPS46", "UPPS51","UPPS56")
pers <- c("UPPS4", "UPPS9", "UPPS14", "UPPS19", "UPPS24","UPPS27",
"UPPS32","UPPS37", "UPPS42", "UPPS47")
purg <- c("UPPS5", "UPPS10", "UPPS15", "UPPS20", "UPPS25","UPPS30",
"UPPS35","UPPS40", "UPPS45", "UPPS49", "UPPS52","UPPS54","UPPS57","UPPS59")
# alphas
cronbach.alpha(select(dmisp,RAPI1:RAPI18)) #RAPI
cronbach.alpha(select(dmisp,nurg)) #negative urgency
cronbach.alpha(select(dmisp,pre)) #premeditation
cronbach.alpha(select(dmisp,pers)[complete.cases(select(dmisp,pers)),]) #perseverance (two people missing one item each)
cronbach.alpha(select(dmisp,ss)) #sensation seeking
cronbach.alpha(select(dmisp,purg)[complete.cases(select(dmisp,purg)),]) #positive urgency (one person missing one item)
# age
dmisp$age <- 117 - dmisp$DOB.year
describe(dmisp$age)
# gender
sum(dmisp$gender.female)/157
dalluw$startdate.x
dalluw$startdate.x %>% year
year(as.Date(dalluw$startdate.x, origin = '1900-1-1'))
instsall.packages('lubridate')
instsall.packages('lubridate')
install.packages('lubridate')
install.packages("lubridate")
library('lubridate')
install.packages("lubridate")
install.packages("lubridate")
library('lubridate')
library('lubridate')
##############################################
#  Descriptive analyses for MIS paper        #
#     Stevens et al. (in prep, 2018)         #
##############################################
# Max Halvorson, updated 11/27/18 #
#################################
rm(list=ls())
library('ltm')
library('psych')
library('apaTables')
library('lubridate')
library('tidyverse')
setwd("C:/Users/Max Halvorson/Dropbox/Impulsivity ML CFA/Data Merge and Files RSVT UW")
dalluw <- read.csv(file='C:/Users/Max Halvorson/Dropbox/Impulsivity ML CFA/Data Merge and Files RSVT UW/coded_complete_data.csv') # UW data
###################################
# Handle invalid cases in UW data #
###################################
# Create nobs variable (any EMA survey that was started)
nobs <- tapply(dalluw$time, dalluw$PID, function(x) {
sum(1*(!is.na(x)))})
# Merge nobs variable to dataset
obsmerge <- data.frame(PID=as.numeric(names(nobs)),
nobs=nobs)
dalluw <- as.tibble(left_join(dalluw, obsmerge, by="PID"))
# Drop participants with 0 EMA observations (baseline only)
dalluw <- filter(dalluw, nobs>0)
length(unique(dalluw$PID)) # 169 --> 161
# Drop participants with <9 EMA observations
dalluw <- filter(dalluw, nobs>=9)
length(unique(dalluw$PID)) # 161 --> 157
############################
# Subset to variables used #
############################
# (baseline) demographics
t1dem <- c(514:541)
# (baseline) impulsigenic traits
t1imp <- c(71:129, 613:617)
# baseline alcohol consumption, alcohol problems
t1alc <- c(621,623,196:214,626)
# daily alcohol consumption, perceived intoxication
emaalc <- c(717,720)
# daily affect
emaaff <- c(661:670,679:680)
# momentary impulsivity
emaimp <- c(765:782, 788:791)
dmis <- as.tibble(select(dalluw,
PID, t1dem, t1imp,t1alc, emaalc, emaaff, emaimp,
-CHECK4))
print(dmis, n=90)
##################################
# Aggregate data to person level #
##################################
dmisp <- dmis[duplicated(dmis$PID)==F,]
####################
# Describe UW data #
####################
# age
dmisp$age <- 117 - dmisp$DOB.year
describe(dmisp$age)
# gender
sum(dmisp$gender.female)/157
# race
sum(dmisp$race.white)/157
sum(dmisp$race.hispanic)/157
sum(dmisp$race.eastasian)/157
sum(dmisp$race.southeastasian)/157
sum(dmisp$race.pacificislander)/157
sum(dmisp$race.southasian)/157
sum(dmisp$race.amerindian)/157
sum(dmisp$race.africanamer)/157
sum(dmisp$race.african)/157
sum(dmisp$race.middleeastern)/157
sum(dmisp$race.mixed)/157
sum(dmisp$race.other)/157
sum(dmisp$race.noresponse)/157
pre <- c("UPPS1", "UPPS6", "UPPS11", "UPPS16", "UPPS21","UPPS28",
"UPPS33","UPPS38", "UPPS43", "UPPS48", "UPPS55")
nurg <- c("UPPS2", "UPPS7", "UPPS12", "UPPS17", "UPPS22","UPPS29",
"UPPS34","UPPS39", "UPPS44", "UPPS50", "UPPS53","UPPS58")
ss <- c("UPPS3", "UPPS8", "UPPS13", "UPPS18", "UPPS23","UPPS26",
"UPPS31","UPPS36", "UPPS41", "UPPS46", "UPPS51","UPPS56")
pers <- c("UPPS4", "UPPS9", "UPPS14", "UPPS19", "UPPS24","UPPS27",
"UPPS32","UPPS37", "UPPS42", "UPPS47")
purg <- c("UPPS5", "UPPS10", "UPPS15", "UPPS20", "UPPS25","UPPS30",
"UPPS35","UPPS40", "UPPS45", "UPPS49", "UPPS52","UPPS54","UPPS57","UPPS59")
# alphas
cronbach.alpha(select(dmisp,RAPI1:RAPI18)) #RAPI
cronbach.alpha(select(dmisp,nurg)) #negative urgency
cronbach.alpha(select(dmisp,pre)) #premeditation
cronbach.alpha(select(dmisp,pers)[complete.cases(select(dmisp,pers)),]) #perseverance (two people missing one item each)
cronbach.alpha(select(dmisp,ss)) #sensation seeking
cronbach.alpha(select(dmisp,purg)[complete.cases(select(dmisp,purg)),]) #positive urgency (one person missing one item)
year(as.Date(dalluw$startdate.x, origin = '1900-1-1'))
year(as.Date(dalluw$startdate.x, origin = '1900-1-1')) - year(dalluw$DOB.year)
year(as.Date(dalluw$startdate.x, origin = '1900-1-1')) - year(as.date(dalluw$DOB.year, origin='1900-1-1'))
year(as.Date(dalluw$startdate.x, origin = '1900-1-1')) - year(as.Date(dalluw$DOB.year, origin='1900-1-1'))
names(dalluw)
which(names(dalluw)=="DOB.year")
# age
dmisp$age <- year(as.Date(dalluw$startdate.x, origin='1900-1-1')) - dmisp$DOB.year
which(names(dalluw)=="startdate.x")
############################
# Subset to variables used #
############################
# (baseline) demographics
t1dem <- c(10,514:541)
# (baseline) impulsigenic traits
t1imp <- c(71:129, 613:617)
# baseline alcohol consumption, alcohol problems
t1alc <- c(621,623,196:214,626)
# daily alcohol consumption, perceived intoxication
emaalc <- c(717,720)
# daily affect
emaaff <- c(661:670,679:680)
# momentary impulsivity
emaimp <- c(765:782, 788:791)
dmis <- as.tibble(select(dalluw,
PID, t1dem, t1imp,t1alc, emaalc, emaaff, emaimp,
-CHECK4))
dmisp <- dmis[duplicated(dmis$PID)==F,]
print(dmis, n=90)
# age
dmisp$age <- year(as.Date(dmisp$startdate.x, origin='1900-1-1')) - dmisp$DOB.year
describe(dmisp$age)
year(as.Date(dmisp$startdate.x, origin='1900-1-1'))
dmisp$DOB.year
# age
dmisp$age <- year(as.Date(dmisp$startdate.x, origin='1900-1-1')) - (1900 + dmisp$DOB.year)
describe(dmisp$age)
# age
dmisp$age <- year(as.Date(dmisp$startdate.x, origin='1900-1-1')) - (1900 + dmisp$DOB.year)
describe(dmisp$age)
sum(dmisp$race.african)/157
sum(dmisp$race.africanamer)/157
dmisp$race.api <- 1*(dmisp$race.eastasian == 1 | dmisp$race.southeastasian == 1 | dmisp$race.pacificislander == 1 |
dmisp$race.southasian == 1)
sum(dmisp$race.api)/157
# race
sum(dmisp$race.white)/157
rm(list=ls())
library('ltm')
library('psych')
library('apaTables')
library('lubridate')
library('tidyverse')
setwd("C:/Users/Max Halvorson/Dropbox/Impulsivity ML CFA/Data Merge and Files RSVT UW")
dalluw <- read.csv(file='C:/Users/Max Halvorson/Dropbox/Impulsivity ML CFA/Data Merge and Files RSVT UW/coded_complete_data.csv') # UW data
##############################################
#  Descriptive analyses for MIS paper        #
#     Stevens et al. (in prep, 2018)         #
##############################################
# Max Halvorson, updated 11/27/18 #
#################################
rm(list=ls())
library('ltm')
library('psych')
library('apaTables')
library('lubridate')
library('tidyverse')
setwd("C:/Users/Max Halvorson/Dropbox/Impulsivity ML CFA/Data Merge and Files RSVT UW")
dalluw <- read.csv(file='C:/Users/Max Halvorson/Dropbox/Impulsivity ML CFA/Data Merge and Files RSVT UW/coded_complete_data.csv') # UW data
###################################
# Handle invalid cases in UW data #
###################################
# Create nobs variable (any EMA survey that was started)
nobs <- tapply(dalluw$time, dalluw$PID, function(x) {
sum(1*(!is.na(x)))})
# Merge nobs variable to dataset
obsmerge <- data.frame(PID=as.numeric(names(nobs)),
nobs=nobs)
dalluw <- as.tibble(left_join(dalluw, obsmerge, by="PID"))
# Drop participants with 0 EMA observations (baseline only)
dalluw <- filter(dalluw, nobs>0)
length(unique(dalluw$PID)) # 169 --> 161
# Drop participants with <9 EMA observations
dalluw <- filter(dalluw, nobs>=9)
length(unique(dalluw$PID)) # 161 --> 157
############################
# Subset to variables used #
############################
# (baseline) demographics
t1dem <- c(10,514:541)
# (baseline) impulsigenic traits
t1imp <- c(71:129, 613:617)
# baseline alcohol consumption, alcohol problems
t1alc <- c(621,623,196:214,626)
# daily alcohol consumption, perceived intoxication
emaalc <- c(717,720)
# daily affect
emaaff <- c(661:670,679:680)
# momentary impulsivity
emaimp <- c(765:782, 788:791)
dmis <- as.tibble(select(dalluw,
PID, t1dem, t1imp,t1alc, emaalc, emaaff, emaimp,
-CHECK4))
print(dmis, n=90)
##################################
# Aggregate data to person level #
##################################
dmisp <- dmis[duplicated(dmis$PID)==F,]
####################
# Describe UW data #
####################
# age
dmisp$age <- year(as.Date(dmisp$startdate.x, origin='1900-1-1')) - (1900 + dmisp$DOB.year)
describe(dmisp$age)
# gender
sum(dmisp$gender.female)/157
# race
sum(dmisp$race.white)/157
sum(dmisp$race.hispanic)/157
sum(dmisp$race.eastasian)/157
sum(dmisp$race.southeastasian)/157
sum(dmisp$race.pacificislander)/157
sum(dmisp$race.southasian)/157
sum(dmisp$race.amerindian)/157
sum(dmisp$race.africanamer)/157
sum(dmisp$race.african)/157
sum(dmisp$race.middleeastern)/157
sum(dmisp$race.mixed)/157
sum(dmisp$race.other)/157
sum(dmisp$race.noresponse)/157
dmisp$race.api <- 1*(dmisp$race.eastasian == 1 | dmisp$race.southeastasian == 1 | dmisp$race.pacificislander == 1 |
dmisp$race.southasian == 1)
sum(dmisp$race.api)/157
pre <- c("UPPS1", "UPPS6", "UPPS11", "UPPS16", "UPPS21","UPPS28",
"UPPS33","UPPS38", "UPPS43", "UPPS48", "UPPS55")
nurg <- c("UPPS2", "UPPS7", "UPPS12", "UPPS17", "UPPS22","UPPS29",
"UPPS34","UPPS39", "UPPS44", "UPPS50", "UPPS53","UPPS58")
ss <- c("UPPS3", "UPPS8", "UPPS13", "UPPS18", "UPPS23","UPPS26",
"UPPS31","UPPS36", "UPPS41", "UPPS46", "UPPS51","UPPS56")
pers <- c("UPPS4", "UPPS9", "UPPS14", "UPPS19", "UPPS24","UPPS27",
"UPPS32","UPPS37", "UPPS42", "UPPS47")
purg <- c("UPPS5", "UPPS10", "UPPS15", "UPPS20", "UPPS25","UPPS30",
"UPPS35","UPPS40", "UPPS45", "UPPS49", "UPPS52","UPPS54","UPPS57","UPPS59")
# alphas
cronbach.alpha(select(dmisp,RAPI1:RAPI18)) #RAPI
cronbach.alpha(select(dmisp,nurg)) #negative urgency
cronbach.alpha(select(dmisp,pre)) #premeditation
cronbach.alpha(select(dmisp,pers)[complete.cases(select(dmisp,pers)),]) #perseverance (two people missing one item each)
cronbach.alpha(select(dmisp,ss)) #sensation seeking
cronbach.alpha(select(dmisp,purg)[complete.cases(select(dmisp,purg)),]) #positive urgency (one person missing one item)
names(dalluw)
dalluw$father.education
names(dalluw)
############################
# Subset to variables used #
############################
# (baseline) demographics
t1dem <- c(10,514:541,573:574)
# (baseline) impulsigenic traits
t1imp <- c(71:129, 613:617)
# baseline alcohol consumption, alcohol problems
t1alc <- c(621,623,196:214,626)
# daily alcohol consumption, perceived intoxication
emaalc <- c(717,720)
# daily affect
emaaff <- c(661:670,679:680)
# momentary impulsivity
emaimp <- c(765:782, 788:791)
dmis <- as.tibble(select(dalluw,
PID, t1dem, t1imp,t1alc, emaalc, emaaff, emaimp,
-CHECK4))
print(dmis, n=90)
dmisp <- dmis[duplicated(dmis$PID)==F,]
# ses
dmisp$father.education
ftable(dmisp$mother.education)
# ses
ftable(dmisp$father.education)
ftable(dmisp$mother.education)
setwd("C:/Users/Max Halvorson/Documents/GitHub/glm_main/Plots")
plotmales<-readRDS("plotmale.rds")
plotfemales<-readRDS("plotfemale.rds")
plotmales
require(ggplot2)
dfmale<-plotmales$dfplot
dfmale
dfmale$sex<-"Male"
dffemale<-plotfemales$dfplot
dffemale$sex<-"Female"
dfplot0<-rbind(dfmale,dffemale)
dfplot0
dfplot<-dfplot0[which(dfplot$part=="count"),]
dfplot<-dfplot0[which(dfplot$part=="count"),]
dfplot<-dfplot0[which(dfplot0$part=="count"),]
dfplot
pointsmale<-plotmales$plotpoints
pointsmale$sex<-"Male"
pointsfemale<-plotfemales$plotpoints
pointsfemale$sex<-"Female"
dfpoints<-rbind(pointsmale,pointsfemale)
dfpoints
(plotcombined<-ggplot() +
geom_ribbon(data=dfplot, aes(x=focal.seq, y=pe, ymin = lower, ymax = upper,fill=sex), alpha = .25) +
geom_smooth(data = dfplot, se=F,aes(focal.seq, pe, by=sex, color=sex), size=1) +
geom_point(data=dfpoints,aes(x=pred,y=y,shape=sex, color=sex),alpha=.5) +
#thematic specifications of my graphic
theme(text=element_text(family="Helvetica",size=10, color="black"),
legend.position="none",
panel.background = element_blank(),
legend.background = element_rect(fill = "white"),
legend.title=element_blank(),
legend.key = element_rect(fill = "white"),
panel.grid.minor = element_blank(),
axis.text.x=element_text(colour="black"),
axis.title.x=element_text(size=14),
axis.text.y=element_text(colour="black"),
axis.title.y=element_text(size=14),
axis.line = element_line(size=.4),
panel.grid.major = element_blank(),
plot.background=element_rect(fill='white'))
)
rm(list = ls())
library(broom)
#############################################
# One-factor between subjects ANOVA
#
# Example from the One factor ANOVA tutorial
#
# Exam scores over three years
mydata<-read.csv("http://www.courses.washington.edu/psy524a/datasets/OneFactorExamScores.csv")
# set up the levels as factors
mydata$Exam <- as.factor(mydata$Exam)
levelNames <- c( "2014", "2015", "2016")
levelNames = factor(levelNames,levels= levelNames)
levels(mydata$Exam) <- levelNames
head(mydata)
# Run the ANOVA:
aov.out <- aov(score ~ Exam,data=mydata)
# This is the simplest formula.  'score' is the
# dependent variable, and 'Exam' is the single,
# independent variable (with three levels):
aov.tidy.out <- tidy(aov.out)
# It produces a single F-statistic and p-value:
print(aov.tidy.out)
###################################################
# Two factor independent measures (between subjects)
# ANOVA
#
# Example from the Two-Factor ANOVA tutorial
#
# This is the effect of beer and caffeine on response times
mydata<-read.csv("http://www.courses.washington.edu/psy524a/datasets/BeerCaffeineANOVA2.csv")
# recode variables
mydata$caffeine[mydata$caffeine==1] <- 'no caffeine'
mydata$caffeine[mydata$caffeine==2] <- 'caffeine'
mydata$beer[mydata$beer==1] <- 'no beer'
mydata$beer[mydata$beer==2] <- 'beer'
mydata$caffeine <- ordered(mydata$caffeine, levels = c( "no caffeine", "caffeine"))
mydata$beer <- ordered(mydata$beer, levels = c( "no beer", "beer"))
head(mydata)
# Run the 2-factor ANOVA.  'caffene*beer' means compute the main
# effects for caffeine and beer, and their interaction.
aov.out <- aov(Responsetime ~ caffeine*beer,data=mydata)
tidy(aov.out)
# This is equivalent to:
aov.out <- aov(Responsetime ~ caffeine + beer + caffeine:beer,data=mydata)
tidy(aov.out)
# You can also analyze the results assuming no interaction.  This
# leaves the SS for the interaction (and its degree of freedom)
# in the denominator ('Residuals')
aov.out <- aov(Responsetime ~ caffeine + beer,data=mydata)
tidy(aov.out)
# load in the data
orig.data<-read.csv("http://www.courses.washington.edu/psy524a/datasets/SubjectExerciseANOVAdependent.csv")
# reorganize the data for one measurement per row
stacked.data <- stack(orig.data)
stacked.data[3] <- rep(ordered(1:6),3)
colnames(stacked.data) <- c("weight","time","subject")
head(stacked.data)
# Run the ANOVA.  'subject' is a within subject variable.
# 'Error' tells aov what denominator to use.  'subject/time'
# means that time is 'nested' within subject.  That is, each
# subject was measured for each level of time.
aov.out <- aov(weight ~ time + Error(subject/time), data=stacked.data)
summary(aov.out)
# Remember that if you ran an ANOVA on the same data set
# as a between subject design:
aov.out <- aov(weight ~ time*subject, data=stacked.data)
summary(aov.out)
###################################################
# Three factor independent measures ANOVA
#
# Example from the 3-Factor ANOVA tutorial
#
# Accident rates across three ages, two seasons and three states
rm(list = ls())
###################################################
# Three factor independent measures ANOVA
#
# Example from the 3-Factor ANOVA tutorial
#
# Accident rates across three ages, two seasons and three states
rm(list = ls())
mydata<-read.csv("http://www.courses.washington.edu/psy524a/datasets/StateAgeSeasonAccidents.csv")
# recode variables
mydata$state[mydata$state==1] <- 'Washington'
mydata$state[mydata$state==2] <- 'California'
mydata$age[mydata$age==1] <- 'young'
mydata$age[mydata$age==2] <- 'middle aged'
mydata$age[mydata$age==3] <- 'old'
mydata$season[mydata$season==1] <- 'summer'
mydata$season[mydata$season==2] <- 'winter'
mydata$state <- ordered(mydata$state, levels = c( "Washington", "California"))
mydata$age <- ordered(mydata$age, levels = c( "young", "middle aged", "old"))
mydata$season <- ordered(mydata$season, levels = c( "summer", "winter"))
head(mydata)
# run the 3-factor fixed effects ANOVA.  'state*age*season'
# asks for the three main effects, the three two-way interactions
# and the three way interaction
out <- aov(accidentrate ~ state*age*season,data=mydata)
summary(out)
# This is equilavent to asking for each of the seven tests separately:
out <- aov(accidentrate ~ state+age+season+ age:season + age:state + season:state + age:state:season,data=mydata)
summary(out)
out = aov(accidentrate ~ (age*season) + Error(state/(age*season)),data=mydata)
summary(out)
orig.data<-read.csv("http://www.courses.washington.edu/psy524a/datasets/DrugTestMixed.csv")
stacked.data <- stack(orig.data[2:4])
stacked.data[3] <-rep(c(rep("without Donepezil",4),rep("with Donepezil",4)),3)
# subject
stacked.data[4] = factor(rep(1:8,3))
colnames(stacked.data) <- c("score","test","drug","subject")
aov.out <- aov(score ~ test*drug + Error(subject/test), data=stacked.data)
# Same data as above on age, state and season, from
# the 3-Factor ANOVA tutorial
summary(aov.out)
# Run as an independent measures ANOVA
aov.outindependent <- aov(score ~ test*drug*subject, data=stacked.data)
summary(aov.outindependent)
data.ex5=read.table("http://personality-project.org/r/datasets/R.appendix5.data",header=T)
head(data.ex5)
aov.ex5 = aov(Recall~(Task*Valence*Gender*Dosage)+Error(Subject/(Task*Valence)),data.ex5   )
summary(aov.ex5)
aov.ex5independent = aov(Recall~Gender*Dosage*Task*Valence*Subject,data.ex5   )
summary(aov.ex5independent)
10%
10%2
5 % 3
5 mod 3
mod(5,3)
5 %% 3
relevance
